#BlueJ class context
comment0.params=
comment0.target=WhiteBoard()
comment0.text=\ Legt\ ein\ neues\ WhiteBoard-Objekt\ an.\ Dieses\ wird\ automatisch\n\ in\ einem\ eigenen\ Fenster\ dargestellt.\n
comment1.params=e
comment1.target=void\ windowClosing(java.awt.event.WindowEvent)
comment10.params=x\ y
comment10.target=java.lang.Object\ drawPoint(double,\ double)
comment10.text=\ Zeichnet\ einen\ schwarzen\ Punkt\n\ @param\ x\ Koordinate\n\ @param\ y\ Koordinate\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment11.params=x\ y\ color
comment11.target=java.lang.Object\ drawPoint(double,\ double,\ java.awt.Color)
comment11.text=\ Zeichnet\ einen\ farbigen\ Punkt\n\ @param\ x\ Koordinate\n\ @param\ y\ Koordinate\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment12.params=x\ y\ hx\ hy
comment12.target=java.lang.Object\ drawEllipse(double,\ double,\ double,\ double)
comment12.text=\ Zeichnet\ eine\ schwarze\ Ellipse\n\ @param\ x\ Mittelpunkts-Koordinate\n\ @param\ y\ Mittelpunkts-Koordinate\n\ @param\ hx\ x\ Achse\n\ @param\ hy\ y\ Achse\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment13.params=x\ y\ hx\ hy\ color\ solid\ rotation
comment13.target=java.lang.Object\ drawEllipse(double,\ double,\ double,\ double,\ java.awt.Color,\ boolean,\ double)
comment13.text=\ Zeichnet\ eine\ farbige\ Ellipse\n\ @param\ x\ Mittelpunkts-Koordinate\n\ @param\ y\ Mittelpunkts-Koordinate\n\ @param\ hx\ x\ Achse\n\ @param\ hy\ y\ Achse\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @param\ solid\ true,\ wenn\ Zeichnungsobjekt\ gefuellt\ werden\ soll.\n\ @param\ rotation\ Drehung\ des\ Objekts,\ Winkel\ im\ Bogenmass\!\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment14.params=x\ y\ radius\ color\ solid
comment14.target=java.lang.Object\ drawCircle(double,\ double,\ double,\ java.awt.Color,\ boolean)
comment14.text=\ Zeichnet\ einen\ farbigen\ Kreis\n\ @param\ x\ Mittelpunkts-Koordinate\n\ @param\ y\ Mittelpunkts-Koordinate\n\ @param\ radius\ Radius\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @param\ solid\ true,\ wenn\ Zeichnungsobjekt\ gefuellt\ werden\ soll.\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment15.params=x\ y\ radius
comment15.target=java.lang.Object\ drawCircle(double,\ double,\ double)
comment15.text=\ Zeichnet\ einen\ schwarzen\ Kreis\n\ @param\ x\ Mittelpunkts-Koordinate\n\ @param\ y\ Mittelpunkts-Koordinate\n\ @param\ radius\ Radius\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment16.params=x\ y
comment16.target=java.lang.Object\ drawPolygon(double[],\ double[])
comment16.text=\ Zeichnet\ ein\ schwarzes\ Polygon\n\ Achtung\:\ Obwohl\ die\ Eckpunkte\ als\ <code>double</code>\ angegeben\ werden,\n\ wird\ intern\ mit\ <code>int</code>\ gerechnet\ und\ entsprechend\ gerundet\!\n\ @param\ x\ Eckpunkt-Koordinaten\ x\n\ @param\ y\ Eckpunkt-Koordinaten\ y\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment17.params=x\ y\ color\ solid\ rotation
comment17.target=java.lang.Object\ drawPolygon(double[],\ double[],\ java.awt.Color,\ boolean,\ double)
comment17.text=\ Zeichnet\ ein\ farbiges\ Polygon\n\ Achtung\:\ Obwohl\ die\ Eckpunkte\ als\ <code>double</code>\ angegeben\ werden,\n\ wird\ intern\ mit\ <code>int</code>\ gerechnet\ und\ entsprechend\ gerundet\!\n\ @param\ x\ Eckpunkt-Koordinaten\ x\n\ @param\ y\ Eckpunkt-Koordinaten\ y\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @param\ solid\ true,\ wenn\ Zeichnungsobjekt\ gefuellt\ werden\ soll.\n\ @param\ rotation\ Drehung\ des\ Objekts,\ Winkel\ im\ Bogenmass\!\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment18.params=x\ y\ hx\ hy
comment18.target=java.lang.Object\ drawRectangle(double,\ double,\ double,\ double)
comment18.text=\ Zeichnet\ ein\ schwarzes\ Rechteck\n\ @param\ x\ Mittelpunkts-Koordinate\n\ @param\ y\ Mittelpunkts-Koordinate\n\ @param\ hx\ x\ Seitenlaenge\n\ @param\ hy\ y\ Seitenlaenge\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment19.params=x\ y\ hx\ hy\ color\ solid\ rotation
comment19.target=java.lang.Object\ drawRectangle(double,\ double,\ double,\ double,\ java.awt.Color,\ boolean,\ double)
comment19.text=\ Zeichnet\ ein\ farbiges\ Rechteck\n\ @param\ x\ Mittelpunkts-Koordinate\n\ @param\ y\ Mittelpunkts-Koordinate\n\ @param\ hx\ x\ Seitenlaenge\n\ @param\ hy\ y\ Seitenlaenge\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @param\ solid\ true,\ wenn\ Zeichnungsobjekt\ gefuellt\ werden\ soll.\n\ @param\ rotation\ Drehung\ des\ Objekts,\ Winkel\ im\ Bogenmass\!\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment2.params=
comment2.target=void\ initFrame()
comment2.text=Legt\ alle\ zum\ Zeichnen\ benoetigten\ Objekte\ an
comment20.params=o
comment20.target=void\ removeShape(java.lang.Object)
comment20.text=\ Loescht\ ein\ Objekt\ nur\ aus\ der\ internen\ Speicherstruktur.\n\ gObjekt\ wird\ nicht\ von\ der\ Zeichenflaeche\ geloescht,\ dies\ geschieht\n\ erst\ beim\ naechsten\ redraw.\ Dadurch\ wird\ ein\ Flickern\ beim\ Bewegen\ von\n\ Objekten\ vermieden.\n\ @param\ o\ Referenz\ auf\ das\ interne\ Zeichenobjekt\n
comment21.params=o
comment21.target=void\ wipeShape(java.lang.Object)
comment21.text=\ Loescht\ ein\ Objekt\ aus\ der\ internen\ Speicherstruktur\ und\ von\n\ der\ Zeichenflaeche.\ Fuehrt\ zu\ Bildschirmflickern,\ wenn\ diese\ Methode\n\ zum\ Bewegen\ von\ Objekten\ verwendet\ wird.\n\ @param\ o\ Referenz\ auf\ das\ interne\ Zeichenobjekt\n
comment22.params=
comment22.target=void\ demo()
comment22.text=\n\ Methode\ zum\ @Demonstrieren\ und\ Testen\ der\ Zeichenmoeglichkeiten\ von\ WhiteBoard.<br>\n\ In\ der\ Methode\ actionPerformed\ des\ JButton\ sieht\ man,\ wie\ ein\ Objekt\ von\ der\n\ Zeichenflaeche\ wieder\ geloescht\ wird.<br>\n\ Die\ uebrigen\ Statements\ zeigen,\ wie\ unterschiedliche\ Objekte\ gezeichnet\ werden.\n
comment23.params=e
comment23.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment24.params=args
comment24.target=void\ main(java.lang.String[])
comment24.text=\ Test-\ Mainmethode\ fuer\ Klasse\ WhiteBoard\n\ @param\ args\ Kommandozeilenparameter\ (ignoriert)\n
comment25.params=
comment25.target=void\ rebuild()
comment25.text=Baut\ Windows\ wieder\ auf,\ falls\ der\ Frame\ geschlossen\ wurde.
comment3.params=
comment3.target=boolean\ recomputeBounds()
comment3.text=\ Neuberechnung\ der\ Groesse\ der\ Zeichenflaeche.\ Dazu\ werden\ alle\ Shapes\n\ durchgearbeitet.\n\ @return\ gibt\ an,\ ob\ sich\ die\ Groesse\ geaendert\ hat\n
comment4.params=s
comment4.target=boolean\ recomputeBounds(java.awt.Shape)
comment4.text=\ Neuberechnung\ der\ Groesse\ der\ Zeichenflaeche,\ wenn\ ein\ Shape\ hinzugefuegt\ wurde\n\ @return\ gibt\ an,\ ob\ sich\ die\ Groesse\ geaendert\ hat\n\ @param\ s\ hinzugefuegtes\ Zeichnungselement\n
comment5.params=s\ rotation
comment5.target=boolean\ recomputeBounds(java.awt.Shape,\ double)
comment5.text=\ Neuberechnung\ der\ Groesse\ der\ Zeichenflaeche,\ wenn\ ein\ gedrehtes\ Zeichnungselement\n\ hinzugefuegt\ wird.\n\ @return\ gibt\ an,\ ob\ sich\ die\ Groesse\ geaendert\ hat\n\ @param\ s\ hinzugefuegtes\ Zeichnungselement\n\ @param\ rotation\ Drehung\ des\ Zeichenelements\n
comment6.params=xfrom\ yfrom\ xto\ yto
comment6.target=java.lang.Object\ drawLine(double,\ double,\ double,\ double)
comment6.text=\ Zeichnet\ eine\ Linie\ in\ default-Farbe.\n\ @param\ xfrom\ x\ Startkoordinate\n\ @param\ yfrom\ y\ Startkoordinate\n\ @param\ xto\ x\ Zielkoordinate\n\ @param\ yto\ y\ Zielkoordinate\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment7.params=xfrom\ yfrom\ xto\ yto\ color
comment7.target=java.lang.Object\ drawLine(double,\ double,\ double,\ double,\ java.awt.Color)
comment7.text=\ Zeichnet\ eine\ farbige\ Linie.\n\ @param\ xfrom\ x\ Startkoordinate\n\ @param\ yfrom\ y\ Startkoordinate\n\ @param\ xto\ x\ Zielkoordinate\n\ @param\ yto\ y\ Zielkoordinate\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
comment8.params=xfrom\ yfrom\ xto\ yto\ excentricity
comment8.target=java.lang.Object\ drawArc(double,\ double,\ double,\ double,\ double)
comment8.text=\ Zeichnet\ einen\ parabolischen\ Bogen\ in\ default-Farbe.\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n\ @param\ xfrom\ x\ Startkoordinate\n\ @param\ yfrom\ y\ Startkoordinate\n\ @param\ xto\ x\ Zielkoordinate\n\ @param\ yto\ y\ Zielkoordinate\n\ @param\ excentricity\ maximale\ Auslenkung\ des\ Bogens\ aus\ der\ Verbindungsgerade\n
comment9.params=xfrom\ yfrom\ xto\ yto\ excentricity\ color\ solid
comment9.target=java.lang.Object\ drawArc(double,\ double,\ double,\ double,\ double,\ java.awt.Color,\ boolean)
comment9.text=\ Zeichnet\ einen\ farbigen,\ evtl.\ gefuellten\ parabolischen\ Bogen.\n\ @param\ xfrom\ x\ Startkoordinate\n\ @param\ yfrom\ y\ Startkoordinate\n\ @param\ xto\ x\ Zielkoordinate\n\ @param\ yto\ y\ Zielkoordinate\n\ @param\ excentricity\ maximale\ Auslenkung\ des\ Bogens\ aus\ der\ Verbindungsgerade\n\ @param\ color\ Linienfarbe.\ {@link\ java.awt.Color}\n\ @param\ solid\ true,\ wenn\ Zeichnungsobjekt\ gefuellt\ werden\ soll.\n\ @return\ Referenz\ auf\ das\ intern\ verwendete\ Zeichnungsobjekt.\ Wird\ benoetigt,\ um\ das\n\ Objekt\ wieder\ zu\ loeschen.\n
numComments=26
